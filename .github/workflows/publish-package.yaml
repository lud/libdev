name: Publish hex.pm Package

on:
  push:
    branches:
      - main

env:
  MIX_ENV: dev
  cache_vsn: "v1"

permissions:
  contents: read

jobs:
  publish_package:
    name: "Publish Hex.pm Package"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27"
          elixir-version: "1.18.3"

      - name: Dependencies build cache
        uses: actions/cache@v4
        id: mix-deps
        with:
          path: |
            deps
            _build
            !_build/plts
          key: ${{ env.cache_vsn }}-deps-build-${{ runner.os }}--${{ hashFiles('mix.lock') }}
          # For the build we want them compiled on the same versions.
          restore-keys: |
            ${{ env.cache_vsn }}-deps-build-${{ runner.os }}--${{ hashFiles('mix.lock') }}
            ${{ env.cache_vsn }}-deps-build-${{ runner.os }}--

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --check-locked

      # Use force as we use a template config so we do not want to ignore a
      # specific directory from the cache. So we always want to compile all the
      # code. We will also `mix clean` at the end.
      - name: Compile Project
        run: mix compile --force --warnings-as-errors

      - name: Regenerate mix.exs versions
        run: |
          mix update.deps.vsns
          mix deps.get --check-locked

      - name: Check versions are updated
        uses: tj-actions/verify-changed-files@a1c6acee9df209257a246f2cc6ae8cb6581c1edf # v20
        id: verify_changed_manifest
        with:
          files: |
            .manifest

      # Now we want to create a new package version, but only if the mix.exs
      # were updated. Mix version will not tell us if something was changed, and
      # we do not want to parse the output. So we will create a new commit using
      # another action, and only if that commit is created we will run mix
      # version.
      - name: Create commit
        if: contains(steps.verify_changed_manifest.outputs.changed_files, 'test_directory')
        uses: EndBug/add-and-commit@v9
        id: commit_min_versions
        with:
          add: .
          author_name: lud
          author_email: "ludovic@demblans.com"
          message: "Updated mix.exs minimal versions"
          pathspec_error_handling: exitImmediately
          push: false

      # This is only needed for mix version since the create commit workflow
      # takes those values directly
      - name: Configure Git
        run: |
          git config --local user.email "ludovic@demblans.com"
          git config --local user.name lud

      - name: Create new version
        if: ${{ steps.commit_min_versions.outputs.committed }}
        run: |
          mix rdmx.update README.md
          git add README.md
          mix version -p

      - name: Push changes
        if: ${{ steps.commit_min_versions.outputs.committed }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Publish to Hex.pm
        if: ${{ steps.commit_min_versions.outputs.committed }}
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
        run: |
          mix hex.publish --yes

        # Prevent app code to be cached
      - name: Clean
        run: mix clean
